// This file is generated automatically by Next.js
// Do not edit this file manually

type AppRoutes = never
type PageRoutes = "/Contact" | "/Impressum" | "/LandingPage" | "/Multimedia" | "/News" | "/NewsArticle" | "/OurPurpose" | "/Partners" | "/PrivacyPolicy" | "/Programs" | "/Signup" | "/SportsPage" | "/TermsAndConditions" | "/WhoWeAre" | "/Why3Steps"
type LayoutRoutes = "/" | "/[locale]" | "/[locale]/about" | "/[locale]/legal"
type RedirectRoutes = never
type RewriteRoutes = never
type Routes = AppRoutes | PageRoutes | LayoutRoutes | RedirectRoutes | RewriteRoutes


interface ParamMap {
  "/": {}
  "/[locale]": { "locale": string; }
  "/[locale]/about": { "locale": string; }
  "/[locale]/legal": { "locale": string; }
  "/Contact": {}
  "/Impressum": {}
  "/LandingPage": {}
  "/Multimedia": {}
  "/News": {}
  "/NewsArticle": {}
  "/OurPurpose": {}
  "/Partners": {}
  "/PrivacyPolicy": {}
  "/Programs": {}
  "/Signup": {}
  "/SportsPage": {}
  "/TermsAndConditions": {}
  "/WhoWeAre": {}
  "/Why3Steps": {}
}


export type ParamsOf<Route extends Routes> = ParamMap[Route]

interface LayoutSlotMap {
  "/": never
  "/[locale]": never
  "/[locale]/about": never
  "/[locale]/legal": never
}


export type { AppRoutes, PageRoutes, LayoutRoutes, RedirectRoutes, RewriteRoutes, ParamMap }

declare global {
  /**
   * Props for Next.js App Router page components
   * @example
   * ```tsx
   * export default function Page(props: PageProps<'/blog/[slug]'>) {
   *   const { slug } = await props.params
   *   return <div>Blog post: {slug}</div>
   * }
   * ```
   */
  interface PageProps<AppRoute extends AppRoutes> {
    params: Promise<ParamMap[AppRoute]>
    searchParams: Promise<Record<string, string | string[] | undefined>>
  }

  /**
   * Props for Next.js App Router layout components
   * @example
   * ```tsx
   * export default function Layout(props: LayoutProps<'/dashboard'>) {
   *   return <div>{props.children}</div>
   * }
   * ```
   */
  type LayoutProps<LayoutRoute extends LayoutRoutes> = {
    params: Promise<ParamMap[LayoutRoute]>
    children: React.ReactNode
  } & {
    [K in LayoutSlotMap[LayoutRoute]]: React.ReactNode
  }
}
